# Generated by Django 5.2.5 on 2025-08-12 04:58

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email Address"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Is Verified"),
                ),
                (
                    "email_verified_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Email Verified At"
                    ),
                ),
                (
                    "phone_verified_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Phone Verified At"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=150, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=150, verbose_name="Last Name"),
                ),
                (
                    "prefix",
                    models.CharField(blank=True, max_length=150, verbose_name="Prefix"),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Male"),
                            ("F", "Female"),
                            ("O", "Other"),
                            ("P", "Prefer not to say"),
                        ],
                        max_length=1,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Birth"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "alternate_phone",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Alternate Phone Number",
                    ),
                ),
                ("country", models.CharField(max_length=100, verbose_name="Country")),
                ("state", models.CharField(max_length=100, verbose_name="State")),
                ("city", models.CharField(max_length=100, verbose_name="City")),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Postal Code"
                    ),
                ),
                (
                    "address_line1",
                    models.TextField(blank=True, verbose_name="Address Line 1"),
                ),
                (
                    "address_line2",
                    models.TextField(blank=True, verbose_name="Address Line 2"),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Company Name"
                    ),
                ),
                (
                    "business_registration_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Business Registration Number",
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(blank=True, max_length=100, verbose_name="Tax ID"),
                ),
                (
                    "language",
                    models.CharField(
                        default="en", max_length=10, verbose_name="Language"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Asia/Kolkata", max_length=50, verbose_name="Timezone"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="INR", max_length=3, verbose_name="Currency"
                    ),
                ),
                (
                    "two_factor_enabled",
                    models.BooleanField(
                        default=False, verbose_name="Two Factor Enabled"
                    ),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Last Login IP"
                    ),
                ),
                (
                    "failed_login_attempts",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Failed Login Attempts"
                    ),
                ),
                (
                    "account_locked_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Account Locked Until"
                    ),
                ),
                (
                    "marketing_emails",
                    models.BooleanField(default=True, verbose_name="Marketing Emails"),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(default=True, verbose_name="SMS Notifications"),
                ),
                (
                    "push_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Push Notifications"
                    ),
                ),
                (
                    "facebook_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Facebook ID"
                    ),
                ),
                (
                    "google_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Google ID"
                    ),
                ),
                (
                    "profile_completion_percentage",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Profile Completion Percentage"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATE", "Create"),
                            ("UPDATE", "Update"),
                            ("DELETE", "Delete"),
                            ("LOGIN", "Login"),
                            ("LOGOUT", "Logout"),
                            ("PAYMENT", "Payment"),
                            ("RENTAL_CREATE", "Rental Created"),
                            ("RENTAL_UPDATE", "Rental Updated"),
                            ("RENTAL_CANCEL", "Rental Cancelled"),
                            ("PRODUCT_UPDATE", "Product Updated"),
                            ("USER_UPDATE", "User Updated"),
                        ],
                        max_length=50,
                        verbose_name="Action",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(max_length=100, verbose_name="Model Name"),
                ),
                (
                    "object_id",
                    models.CharField(max_length=100, verbose_name="Object ID"),
                ),
                ("object_repr", models.TextField(verbose_name="Object Representation")),
                (
                    "changes",
                    models.JSONField(blank=True, default=dict, verbose_name="Changes"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Feature",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Feature Name"
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(default=False, verbose_name="Is Enabled"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Feature",
                "verbose_name_plural": "Features",
            },
        ),
        migrations.CreateModel(
            name="OTPVerification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("email", models.EmailField(max_length=254)),
                (
                    "phone_number",
                    models.CharField(
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("otp", models.CharField(max_length=6)),
                (
                    "otp_type",
                    models.CharField(
                        choices=[("email", "Email"), ("phone", "Phone")], max_length=10
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_pictures/",
                        verbose_name="Profile Picture",
                    ),
                ),
                ("bio", models.TextField(blank=True, verbose_name="Bio")),
                ("website", models.URLField(blank=True, verbose_name="Website")),
                (
                    "linkedin_profile",
                    models.URLField(blank=True, verbose_name="LinkedIn Profile"),
                ),
                (
                    "occupation",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Occupation"
                    ),
                ),
                (
                    "company",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Company"
                    ),
                ),
                (
                    "industry",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Industry"
                    ),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Emergency Contact Name",
                    ),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name="Emergency Contact Phone",
                    ),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="Emergency Contact Relationship",
                    ),
                ),
                (
                    "preferred_contact_method",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("PHONE", "Phone"),
                            ("SMS", "SMS"),
                        ],
                        default="EMAIL",
                        max_length=20,
                        verbose_name="Preferred Contact Method",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("CUSTOMER", "Customer"),
                            ("STAFF", "Staff"),
                            ("MANAGER", "Manager"),
                            ("ADMIN", "Administrator"),
                            ("SUPER_ADMIN", "Super Administrator"),
                        ],
                        max_length=20,
                        verbose_name="Role",
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Assigned At"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Expires At"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Assigned By",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Role",
                "verbose_name_plural": "User Roles",
                "ordering": ["user", "role"],
            },
        ),
        migrations.CreateModel(
            name="UserRoleFeaturePermission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "can_read",
                    models.BooleanField(default=False, verbose_name="Can Read"),
                ),
                (
                    "can_write",
                    models.BooleanField(default=False, verbose_name="Can Write"),
                ),
                (
                    "can_delete",
                    models.BooleanField(default=False, verbose_name="Can Delete"),
                ),
                (
                    "is_allowed",
                    models.BooleanField(default=False, verbose_name="Is Allowed"),
                ),
                (
                    "feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="role_permissions",
                        to="user.feature",
                        verbose_name="Feature",
                    ),
                ),
                (
                    "user_role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feature_permissions",
                        to="user.userrole",
                        verbose_name="User Role",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="user_user_email_5f6a77_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["phone_number"], name="user_user_phone_n_523d33_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["created_at"], name="user_user_created_c7163e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["user", "action", "created_at"],
                name="user_auditl_user_id_6f601a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["model_name", "object_id"],
                name="user_auditl_model_n_6d5041_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="otpverification",
            index=models.Index(
                fields=["email", "otp_type"], name="user_otpver_email_f00c36_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="otpverification",
            index=models.Index(
                fields=["phone_number", "otp_type"],
                name="user_otpver_phone_n_96dc80_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="otpverification",
            index=models.Index(
                fields=["expires_at"], name="user_otpver_expires_e2c549_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userrole",
            unique_together={("user", "role")},
        ),
    ]
