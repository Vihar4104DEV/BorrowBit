# Generated by Django 5.2.5 on 2025-08-12 04:58

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DeliveryJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "job_id",
                    models.CharField(
                        help_text="Unique job identifier", max_length=20, unique=True
                    ),
                ),
                (
                    "job_type",
                    models.CharField(
                        choices=[
                            ("pickup", "Pickup"),
                            ("delivery", "Delivery"),
                            ("pickup_and_delivery", "Pickup and Delivery"),
                            ("return", "Return"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("assigned", "Assigned"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("picked_up", "Picked Up"),
                            ("in_transit", "In Transit"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
                ("customer_name", models.CharField(max_length=255)),
                ("customer_phone", models.CharField(max_length=15)),
                ("customer_email", models.EmailField(max_length=254)),
                ("pickup_address", models.TextField()),
                ("pickup_pincode", models.CharField(max_length=10)),
                ("pickup_city", models.CharField(max_length=100)),
                ("pickup_state", models.CharField(max_length=100)),
                (
                    "pickup_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "pickup_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("pickup_instructions", models.TextField(blank=True, null=True)),
                (
                    "pickup_contact_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pickup_contact_phone",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("delivery_address", models.TextField()),
                ("delivery_pincode", models.CharField(max_length=10)),
                ("delivery_city", models.CharField(max_length=100)),
                ("delivery_state", models.CharField(max_length=100)),
                (
                    "delivery_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "delivery_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("delivery_instructions", models.TextField(blank=True, null=True)),
                (
                    "delivery_contact_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "delivery_contact_phone",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("package_description", models.TextField()),
                (
                    "package_weight",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Weight in kilograms",
                        max_digits=8,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "package_dimensions",
                    models.JSONField(
                        default=dict, help_text="Length, width, height in cm"
                    ),
                ),
                (
                    "package_value",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Declared value of package",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                ("is_fragile", models.BooleanField(default=False)),
                ("is_urgent", models.BooleanField(default=False)),
                ("pickup_date", models.DateField()),
                (
                    "pickup_time_slot",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("delivery_date", models.DateField()),
                (
                    "delivery_time_slot",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "estimated_delivery_time",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("actual_pickup_time", models.DateTimeField(blank=True, null=True)),
                ("actual_delivery_time", models.DateTimeField(blank=True, null=True)),
                (
                    "base_fare",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "distance_fare",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "priority_fare",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "total_fare",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "partner_commission",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("assigned_at", models.DateTimeField(blank=True, null=True)),
                ("accepted_at", models.DateTimeField(blank=True, null=True)),
                ("rejected_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                (
                    "tracking_number",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "current_location",
                    models.JSONField(
                        default=dict, help_text="Current location coordinates"
                    ),
                ),
                (
                    "route_optimization",
                    models.JSONField(
                        default=dict, help_text="Optimized route information"
                    ),
                ),
                (
                    "special_requirements",
                    models.JSONField(
                        default=dict, help_text="Special handling requirements"
                    ),
                ),
                ("insurance_required", models.BooleanField(default=False)),
                (
                    "insurance_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
            ],
            options={
                "verbose_name": "Delivery Job",
                "verbose_name_plural": "Delivery Jobs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DeliveryPartner",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "partner_code",
                    models.CharField(
                        help_text="Unique partner identifier",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "partner_type",
                    models.CharField(
                        choices=[
                            ("individual", "Individual"),
                            ("company", "Company"),
                            ("franchise", "Franchise"),
                        ],
                        default="individual",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                            ("pending_verification", "Pending Verification"),
                        ],
                        default="pending_verification",
                        max_length=20,
                    ),
                ),
                ("phone_number", models.CharField(max_length=15, unique=True)),
                (
                    "alternate_phone",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "emergency_contact",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("address_line1", models.CharField(max_length=255)),
                (
                    "address_line2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(default="India", max_length=100)),
                (
                    "vehicle_type",
                    models.CharField(
                        choices=[
                            ("bike", "Bike"),
                            ("scooter", "Scooter"),
                            ("car", "Car"),
                            ("van", "Van"),
                            ("truck", "Truck"),
                        ],
                        max_length=20,
                    ),
                ),
                ("vehicle_number", models.CharField(max_length=20, unique=True)),
                (
                    "vehicle_model",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "vehicle_color",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "service_areas",
                    models.JSONField(
                        default=list, help_text="List of area codes/pincodes served"
                    ),
                ),
                (
                    "max_delivery_distance",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Maximum delivery distance in kilometers",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0.1),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                ("total_deliveries", models.PositiveIntegerField(default=0)),
                ("successful_deliveries", models.PositiveIntegerField(default=0)),
                ("failed_deliveries", models.PositiveIntegerField(default=0)),
                ("is_available", models.BooleanField(default=True)),
                ("available_from", models.TimeField(blank=True, null=True)),
                ("available_to", models.TimeField(blank=True, null=True)),
                (
                    "working_days",
                    models.JSONField(
                        default=list,
                        help_text="List of working days (0=Monday, 6=Sunday)",
                    ),
                ),
                (
                    "commission_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=10.0,
                        help_text="Commission rate as percentage",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                (
                    "minimum_payout",
                    models.DecimalField(
                        decimal_places=2,
                        default=100.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "documents",
                    models.JSONField(
                        default=dict, help_text="Document URLs and verification status"
                    ),
                ),
                (
                    "current_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "current_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("last_location_update", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Delivery Partner",
                "verbose_name_plural": "Delivery Partners",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DeliveryTracking",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("job_assigned", "Job Assigned"),
                            ("job_accepted", "Job Accepted"),
                            ("job_rejected", "Job Rejected"),
                            ("pickup_started", "Pickup Started"),
                            ("pickup_completed", "Pickup Completed"),
                            ("in_transit", "In Transit"),
                            ("out_for_delivery", "Out for Delivery"),
                            ("delivery_attempted", "Delivery Attempted"),
                            ("delivery_completed", "Delivery Completed"),
                            ("delivery_failed", "Delivery Failed"),
                            ("location_update", "Location Update"),
                            ("status_update", "Status Update"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("location_address", models.TextField(blank=True, null=True)),
                ("description", models.TextField()),
                (
                    "additional_data",
                    models.JSONField(default=dict, help_text="Additional event data"),
                ),
                ("event_time", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Delivery Tracking",
                "verbose_name_plural": "Delivery Tracking",
                "ordering": ["-event_time"],
            },
        ),
        migrations.CreateModel(
            name="JobAssignment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                ("response_time", models.DurationField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                ("estimated_pickup_time", models.DateTimeField(blank=True, null=True)),
                (
                    "estimated_delivery_time",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("partner_notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Job Assignment",
                "verbose_name_plural": "Job Assignments",
                "ordering": ["-assigned_at"],
            },
        ),
        migrations.CreateModel(
            name="PartnerEarnings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "earning_type",
                    models.CharField(
                        choices=[
                            ("delivery_fee", "Delivery Fee"),
                            ("commission", "Commission"),
                            ("bonus", "Bonus"),
                            ("tip", "Tip"),
                            ("penalty", "Penalty"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("paid", "Paid"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "commission_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "commission_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "net_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                ("earned_date", models.DateField()),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("paid_at", models.DateTimeField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "payment_reference",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "verbose_name": "Partner Earning",
                "verbose_name_plural": "Partner Earnings",
                "ordering": ["-earned_date"],
            },
        ),
    ]
